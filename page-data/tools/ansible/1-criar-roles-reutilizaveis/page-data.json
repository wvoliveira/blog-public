{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/tools/ansible/1-criar-roles-reutilizaveis/","result":{"data":{"site":{"siteMetadata":{"title":"O blog","social":[{"name":"LinkedIn","url":"https://www.linkedin.com/in/wvoliveira"},{"name":"GitHub","url":"https://github.com/wvoliveira"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"83d43dd6-bfae-5a52-b511-72e4e7fcd2d6","excerpt":"Meta A ideia é criar algo simples para mostrar como podemos reutilizar roles em diferentes projetos. Pensando nisso, vamos criar duas roles…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Ansible: criar roles reutilizaveis\",\n  \"date\": \"2020-10-04T00:00:00.000Z\",\n  \"tags\": [\"ansible\", \"role\", \"ansible-galaxy\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"meta\"\n  }, \"Meta\"), mdx(\"p\", null, \"A ideia \\xE9 criar algo simples para mostrar como podemos reutilizar roles em diferentes projetos. Pensando nisso, vamos criar duas roles:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Basic: para instala\\xE7\\xE3o e configur\\xE7\\xE3o de ferramentas b\\xE1sicas do Linux;\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Nginx: instala\\xE7\\xE3o e configura\\xE7\\xE3o do Nginx, que poder\\xE1 ser utilizado como proxy reverso de alguma aplica\\xE7\\xE3o.\")), mdx(\"p\", null, \"As duas ideias fazem total sentido na maioria dos ambientes corporativos. A \\u201Cbasic\\u201D poder\\xE1 servir para configura\\xE7\\xE3o de reposit\\xF3rios internos, certificados internos, instala\\xE7\\xE3o de ferramentas que existem na maioria dos reposit\\xF3rios, como telnet, netcat e etc. Por outro lado, o \\u201CNginx\\u201D \\xE9 utilizado em diversas arquiteturas, principalmente como proxy reverso de alguma solu\\xE7\\xE3o.\"), mdx(\"p\", null, \"E para facilitar a cria\\xE7\\xE3o e a l\\xF3gica das nossas roles, vamos restringir nosso foco em 1 sistema operacional espec\\xEDfico: CentOS 7.\"), mdx(\"p\", null, \"Ah, tenha em mente tamb\\xE9m que estou usando um servidor remoto para servir como cobaia para este artigo. Ent\\xE3o ficar\\xE1 assim: criar as roles no meu notebook e executar as tarefas em um servidor remoto.\"), mdx(\"h2\", {\n    \"id\": \"role-basic\"\n  }, \"Role Basic\"), mdx(\"p\", null, \"Para iniciarmos uma nova role, vamos utilizar o ansible-galaxy:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"$ ansible-galaxy role init basic\\n\")), mdx(\"p\", null, \"Com isso temos a seguinte estrutura:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \".\\n\\u2514\\u2500\\u2500 basic\\n    \\u251C\\u2500\\u2500 README.md\\n    \\u251C\\u2500\\u2500 defaults\\n    \\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 main.yml\\n    \\u251C\\u2500\\u2500 files\\n    \\u251C\\u2500\\u2500 handlers\\n    \\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 main.yml\\n    \\u251C\\u2500\\u2500 meta\\n    \\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 main.yml\\n    \\u251C\\u2500\\u2500 tasks\\n    \\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 main.yml\\n    \\u251C\\u2500\\u2500 templates\\n    \\u251C\\u2500\\u2500 tests\\n    \\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 inventory\\n    \\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 test.yml\\n    \\u2514\\u2500\\u2500 vars\\n        \\u2514\\u2500\\u2500 main.yml\\n\")), mdx(\"p\", null, \"Explicando o significado de cada pasta:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"defaults: vari\\xE1veis padr\\xF5es\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"files: arquivos que ser\\xE3o distribuidos\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"handlers: fun\\xE7\\xF5es que poder\\xE3o ser invocadas sobre alguma condi\\xE7\\xE3o\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"meta: informa\\xE7\\xF5es da role\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tasks: principais fun\\xE7\\xF5es/tarefas que ser\\xE3o executadas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"templates: modelos de arquivos que ser\\xE3o distribu\\xEDdos\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tests: tarefas para testar as fun\\xE7\\xF5es da role\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"vars: outras vari\\xE1veis da role que tem maior valor do que as vari\\xE1veis definidas na pasta \\u201Cdefaults\\u201D. Veja na documenta\\xE7\\xE3o para mais detalhes e como devem ser utilizadas\")), mdx(\"p\", null, \"Agora vamos definir as fun\\xE7\\xF5es para essa role:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Atualizar os pacotes que j\\xE1 est\\xE3o instalados no sistema operacional\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Instalar o telnet e netcat\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Alterar o conte\\xFAdo do /etc/motd\")), mdx(\"p\", null, \"Copie e cole o seguinte conte\\xFAdo no arquivo main.yml da pasta tasks:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"---\\n- name: atualiza os pacotes instalados no sistema\\n  yum:\\n    state: latest\\n    update_only: yes\\n\\n- name: instala pacotes adicionais\\n  yum:\\n    name: \\\"{{ basic_packages }}\\\"\\n\\n- name: altera o arquivo /etc/motd\\n  template:\\n    src: motd.j2\\n    dest: /etc/motd\\n    mode: '0644'\\n\")), mdx(\"p\", null, \"As 3 tarefas acima fazem exatamente o que listamos no passo anterior, por\\xE9m temos que definir as vari\\xE1veis e o template. Mas antes vamos explicar nos detalhes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"O m\\xF3dulo yum servir\\xE1 para atualizar todos os pacotes instalados no sistema para a \\xFAltima vers\\xE3o\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"O m\\xF3dulo yum ser\\xE1 utilizado para instalar os pacotes listados na vari\\xE1vel basic_packages\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Por \\xFAltimo, utilizaremos o m\\xF3dulo template para inserir o conte\\xFAdo do nosso modelo motd.j2 para o arquivo /etc/motd\")), mdx(\"p\", null, \"Esses passos podem ser simples, por\\xE9m segue a mesma l\\xF3gica de configura\\xE7\\xE3o de v\\xE1rias solu\\xE7\\xF5es: instala\\xE7\\xE3o do pacote > configura\\xE7\\xE3o > inicializa\\xE7\\xE3o do servi\\xE7o.\"), mdx(\"p\", null, \"Vamos configurar o que resta, come\\xE7ando definindo as vari\\xE1veis. No arquivo main.yml da pasta defaults, cole o seguinte conte\\xFAdo:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ansible\"\n  }), \"---\\nbasic_packages: \\n  - telnet\\n  - nc\\n\\nbasic_motd: \\\"Gerenciado pelo Ansible!\\\"\\n\")), mdx(\"p\", null, \"Agora crie um arquivo motd.j2 dentro da pasta templates com o seguinte conte\\xFAdo:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jinja\"\n  }), \"{{ basic_motd }}\\n\")), mdx(\"p\", null, \"O exemplo \\xE9 bem simples e serve para ser bem claro mesmo, mas podemos refor\\xE7ar: quando executarmos o ansible, ele ir\\xE1 usar o template motd.j2 utilizando a vari\\xE1vel basic_motd definida no arquivo main.yml da pasta defaults.\"), mdx(\"p\", null, \"Aparentemente est\\xE1 tudo OK. Bora criar um arquivo para invocar nossa role. Nesse exemplo criei um arquivo com o nome site.yml no mesmo path da pasta basic (a role que acabamos de criar),  conforme padr\\xE3o da documenta\\xE7\\xE3o. Copie e cole o seguinte conte\\xFAdo nesse arquivo:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ansible\"\n  }), \"---\\n- hosts: all\\n  become: yes\\n  roles:\\n    - basic\\n\")), mdx(\"p\", null, \"Explicando as linhas:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Iremos rodar em todos os hosts do invent\\xE1rio\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Utilizar root para previl\\xE9gios administrativos\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Invocar a role que acabamos de criar\")), mdx(\"p\", null, \"Lembrando que esse arquivo site.yml ir\\xE1 ficar no mesmo diret\\xF3rio da pasta basic. Assim:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \".\\n\\u251C\\u2500\\u2500 basic\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 README.md\\n\\u2502\\xA0\\xA0 ...\\n\\u2514\\u2500\\u2500 site.yml\\n\")), mdx(\"p\", null, \"Agora vamos usar a ferramenta de linha de comando ansible-playbook para invocar esse arquivo. Como eu irei rodar esse playbook em um servidor remoto, irei passar o nome do host por linha de comando, como se fosse nosso invent\\xE1ro de m\\xE1quinas:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"ansible-playbook -i \\\"<3.235.109.63>,\\\" site.yml -u cloud_user -kK\\n\")), mdx(\"p\", null, \"Na linha acima irei conectar no servidor remoto (3.235.109.63) com um usu\\xE1rio sem privil\\xE9gios administrativos (cloud_user), por isso coloquei o become: yes no arquivo site.yml e os par\\xE2metros -kK serve para o ansible perguntar a senha do usu\\xE1rio e a senha do usu\\xE1rio com privil\\xE9gios.\"), mdx(\"p\", null, \"Por fim, o seguinte resultado dever\\xE1 aparecer em sua tela:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"SSH password: \\nBECOME password[defaults to SSH password]: \\n\\nPLAY [all] ********************************************************************************************************************************************\\n\\nTASK [Gathering Facts] ********************************************************************************************************************************\\nok: [3.235.109.63]\\n\\nTASK [basic : atualiza os pacotes instalados no sistema] **********************************************************************************************\\nok: [3.235.109.63]\\n\\nTASK [basic : instala pacotes adicionais] *************************************************************************************************************\\nchanged: [3.235.109.63]\\n\\nTASK [basic : altera o arquivo /etc/motd] *************************************************************************************************************\\nchanged: [3.235.109.63]\\n\\nPLAY RECAP ********************************************************************************************************************************************\\n3.235.109.63               : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0 \\n\")), mdx(\"p\", null, \"Onde mostrar changed, significa que algo foi alterado naquela etapa. No nosso caso os pacotes foram instalados e o arquivo /etc/motd alterado.\"), mdx(\"p\", null, \"Podemos verificar autenticando no servidor e validando se realmente foi realizado com sucesso ou podemos fazer isso com o pr\\xF3prio ansible:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"ansible -i \\\"3.235.109.63,\\\" all -m yum -a \\\"name=telnet\\\" -u cloud_user -kK\\n\")), mdx(\"p\", null, \"Depois eu explico com mais detalhe em outro post, mas resumindo: essa \\xE9 uma das formas em que podemos utilizar o Ansible por linha de comando (ad-hok), por\\xE9m dever\\xE1 ser utilizado com cautela, pois n\\xE3o \\xE9 nada reutiliz\\xE1vel dessa forma.\\nO resultado desse comando:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"3.235.109.63 | SUCCESS => {\\n    \\\"ansible_facts\\\": {\\n        \\\"discovered_interpreter_python\\\": \\\"/usr/bin/python\\\"\\n    },\\n    \\\"changed\\\": false,\\n    \\\"msg\\\": \\\"\\\",\\n    \\\"rc\\\": 0,\\n    \\\"results\\\": [\\n        \\\"1:telnet-0.17-65.el7_8.x86_64 providing telnet is already installed\\\"\\n    ]\\n}\\n\")), mdx(\"p\", null, \"Mostrando que o telnet j\\xE1 est\\xE1 instalado.\"), mdx(\"h2\", {\n    \"id\": \"role-nginx\"\n  }, \"Role Nginx\"), mdx(\"p\", null, \"Para criarmos a role para instala\\xE7\\xE3o e configura\\xE7\\xE3o do Nginx seguiremos a mesma l\\xF3gica da role basic. Utilizaremos o ansible-galaxy para iniciarmos uma role do zero:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"ansible-galaxy role init nginx\\n\")), mdx(\"p\", null, \"A estrutura da role continua a mesma:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \".\\n\\u2514\\u2500\\u2500 nginx\\n    \\u251C\\u2500\\u2500 README.md\\n    \\u251C\\u2500\\u2500 defaults\\n    \\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 main.yml\\n    \\u251C\\u2500\\u2500 files\\n    \\u251C\\u2500\\u2500 handlers\\n    \\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 main.yml\\n    \\u251C\\u2500\\u2500 meta\\n    \\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 main.yml\\n    \\u251C\\u2500\\u2500 tasks\\n    \\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 main.yml\\n    \\u251C\\u2500\\u2500 templates\\n    \\u251C\\u2500\\u2500 tests\\n    \\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 inventory\\n    \\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 test.yml\\n    \\u2514\\u2500\\u2500 vars\\n        \\u2514\\u2500\\u2500 main.yml\\n\")), mdx(\"p\", null, \"Como comentei anteriormente, vamos seguir a simplicidade nas tarefas para dar enf\\xE2se a reutiliza\\xE7\\xE3o das roles. Ent\\xE3o vamos criar as seguintes a\\xE7\\xF5es:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Instalar o Nginx\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Adicionar um novo arquivo index.html\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Iniciar e habilitar o servi\\xE7o do Nginx\")), mdx(\"p\", null, \"Tente analisar o conte\\xFAdo abaixo, depois copie e cole no arquivo main.yml da pasta tasks:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ansible\"\n  }), \"---\\n- name: install nginx \\n  yum:\\n    name: nginx\\n    state: present\\n\\n- name: insert index.html\\n  template:\\n    src: index.html.j2\\n    dest: /usr/share/nginx/html/index.html\\n    owner: root\\n    group: root\\n    mode: '0777'\\n  notify: restart service\\n\\n- name: start service\\n  systemd:\\n    name: nginx\\n    state: started\\n\")), mdx(\"p\", null, \"Existem 3 tarefas conforme listamos no passo anterior. A maioria segue a mesma l\\xF3gica da role basic, por\\xE9m existe 1 ponto bem interessante: o notify. Ao executar a tarefa de inserir o index.html, se tiver altera\\xE7\\xF5es a serem feitas, ele ir\\xE1 reiniciar o servi\\xE7o, chamando o handler \\u201Crestart service\\u201D.\"), mdx(\"p\", null, \"Vamos inserir o conte\\xFAdo do handler no arquivo main.yml na pasta handlers:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ansible\"\n  }), \"---\\n- name: restart service\\n  systemd:\\n    name: nginx\\n    state: restarted\\n\")), mdx(\"p\", null, \"E n\\xE3o podemos nos esquecer do template. Arquivo index.html.j2 na pasta templates:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<!DOCTYPE HTML>\\n<html>\\n<head>\\n  <title>Criado pelo Ansible</title>\\n</head>\\n\\n<body>\\n    <h1>Criado pelo Ansible</h1>\\n</body>\\n</html>\\n\")), mdx(\"p\", null, \"Agora vamos adicionar essa role no site.yml que criamos para invocar a role basic:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ansible\"\n  }), \"---\\n- hosts: all\\n  become: yes\\n  roles:\\n    - basic\\n    - nginx\\n\")), mdx(\"p\", null, \"E bora executar da mesma forma que executamos a role basic:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"ansible-playbook -i \\\"18.223.170.162,\\\" site.yml -u cloud_user -kK\\n\")), mdx(\"p\", null, \"Se tudo der certo, o resultado da execu\\xE7\\xE3o ser\\xE1 esse:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"...\\nTASK [install nginx] *************************************************************************************************************\\nchanged: [18.223.170.162]\\n\\nTASK [nginx : insert index.html] *************************************************************************************************\\nchanged: [18.223.170.162]\\n\\nTASK [nginx : start service] *****************************************************************************************************\\nchanged: [18.223.170.162]\\n\\nRUNNING HANDLER [nginx : restart service] ****************************************************************************************\\nchanged: [18.223.170.162]\\n\\nPLAY RECAP ***********************************************************************************************************************\\n18.223.170.162             : ok=8    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0  \\n\")), mdx(\"p\", null, \"E para verificar se nossa instala\\xE7\\xE3o e configura\\xE7\\xE3o do Nginx funcionou, bora acessar a porta 80 e ver o que retorna:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"curl 18.223.170.162\\n\")), mdx(\"p\", null, \"Resultado:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<!DOCTYPE HTML>\\n<html>\\n<head>\\n  <title>Criado pelo Ansible</title>\\n</head>\\n\\n<body>\\n    <h1>Criado pelo Ansible</h1>\\n</body>\\n</html>\\n\")), mdx(\"p\", null, \"Por fim, realizamos as seguintes tarefas com as duas roles:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Atualizamos os pacotes instalados no sistema operacional;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Instalamos pacotes bem interessantes, como telnet e netcat;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alteramos o /etc/motd para quando entrarem no servidor saberem que ele \\xE9 gerenciado pelo Ansible;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Instalamos, configuramos e iniciamos o Nginx.\")), mdx(\"p\", null, \"Isso tudo pode ser reutilizado por outros projetos. Digamos que voc\\xEA queria s\\xF3 utilizar a parte da role basic ou somente a parte do Nginx.. Tudo \\xE9 apartado.\"), mdx(\"p\", null, \"Espero que voc\\xEA tenha gostado.\"), mdx(\"p\", null, \"Refer\\xEAncias:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html\"\n  }), \"https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.ansible.com/ansible/latest/user_guide/intro_adhoc.html\"\n  }), \"https://docs.ansible.com/ansible/latest/user_guide/intro_adhoc.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.ansible.com/ansible/latest/user_guide/become.html\"\n  }), \"https://docs.ansible.com/ansible/latest/user_guide/become.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html\"\n  }), \"https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.ansible.com/ansible/latest/modules/template_module.html\"\n  }), \"https://docs.ansible.com/ansible/latest/modules/template_module.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.ansible.com/ansible/latest/modules/yum_module.html\"\n  }), \"https://docs.ansible.com/ansible/latest/modules/yum_module.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html\"\n  }), \"https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html\"\n  }), \"https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html\"))));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/tools/ansible/1-criar-roles-reutilizaveis/","title":"Ansible: criar roles reutilizaveis","tags":["ansible","role","ansible-galaxy"],"date":"October 04, 2020","image":null,"imageAlt":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"834acdbc-f6b8-5f57-aefb-bc79be1aa23c","excerpt":"Esse módulo pode ser muito útil quando você precisa compartilhar algum arquivo de forma rápida e fácil. Quando invocamos o módulo http…","slug":"/languages/python/3-modulo-http-server/","title":"Python: módulo http.server","date":"September 15, 2020"},"next":{"__typename":"MdxBlogPost","id":"baa2b481-df2d-5947-9aeb-37b3ca895020","excerpt":"Estamos rodeados por APIs que nos abrem lacks de oportunidades para automatizar nossos trabalhos manuais do dia a dia. E agora vou te…","slug":"/languages/go/2-consumindo-APIs/","title":"Go: Consumindo APIs","date":"November 06, 2020"}},"pageContext":{"id":"83d43dd6-bfae-5a52-b511-72e4e7fcd2d6","previousId":"834acdbc-f6b8-5f57-aefb-bc79be1aa23c","nextId":"baa2b481-df2d-5947-9aeb-37b3ca895020","maxWidth":1380}},"staticQueryHashes":["2744905544","2744905544","3090755652","386998304","388561117","764694655"]}